{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>By default FLSun does not use builds from official GitHub repositories. Updates point to Gitee repositories which are very slow, sometimes inaccessible and not updated. In addition, during Delta Calibration, tower angles and delta radius are never recalculated in their Klipper build, which can cause several issues.</p> <p>This documentation explains the whole process in order to obtain Root access on the Speeder Pad and to configure it correctly with optimized printer settings. In addition there is documentation for...</p> <ul> <li>Useful and automated macros with notifications to KlipperScreen</li> <li>Configuration for ADXL345</li> <li>Improved Start/End Gcodes</li> <li>And more...</li> </ul> <p>Before using Klipper please read these documentations:</p> <ul> <li>Klipper (Operating System)</li> <li>Moonraker (API Web Server)</li> <li>Mainsail (Web Interface)</li> <li>KlipperScreen (Screen Interface)</li> </ul> <p>To start, you need to Re-install the Speedpad OS.</p>"},{"location":"configuration/calibration/","title":"Calibrate your Printer","text":"<p>This calibrations can be done by Mainsail Interface with Macros or on Speeder Pad directly.</p> <ul> <li> <p>Start BED PID and save configuration.</p> </li> <li> <p>Start HOTEND PID and save configuration.</p> </li> <li> <p>Calibrate your extruder by calculing Rotation Distance.</p> </li> <li> <p>Start ENDSTOP CALIBRATION and save configuration.</p> </li> <li> <p>Start DELTA CALIBRATION and save configuration.</p> </li> <li> <p>Start BED LEVELING and save configuration.</p> </li> <li> <p>Adjust Z-OFFSET, first you need to move to Z=0 and then adjust nozzle position with a sheet of paper.</p> </li> <li>Note: The Z-Offset is saved in real time including when adjusting babysteps.</li> </ul> <p>If you have an ADXL345 you want to use, you should do that next at ADXL345.</p>"},{"location":"configuration/crowsnest/","title":"Crowsnest","text":"<p>It's possible to improve Webcams support and in particular the framerate by uninstalling mjpg-streamer and installing Crowsnest daemon (see here for more info).</p>"},{"location":"configuration/crowsnest/#installing-crowsnest","title":"Installing Crowsnest","text":"<p>Enter the following commands (one at a time):</p> <pre><code>cd ~\ngit clone https://github.com/mainsail-crew/crowsnest.git\ncd ~/crowsnest\nmake config\n</code></pre> <p>When asked to Continue select <code>Yes</code> by typing <code>Y</code> then <code>Enter</code>.</p> <p>When asked to specify path for config file (crowsnest.conf):</p> <ul> <li>For 1 instance: You can press <code>Enter</code> directly</li> <li>For 3 instances type: <code>/home/pi/printer_1_data/config</code></li> </ul> <p>When asked to specify path for log file (crowsnest.logs):</p> <ul> <li>For 1 instance: You can press <code>Enter</code> directly</li> <li>For 3 instances type: <code>/home/pi/printer_1_data/logs</code></li> </ul> <p>When asked to specify path for environment file (crowsnest.env):</p> <ul> <li>For 1 instance: You can press <code>Enter</code> directly</li> <li>For 3 instances type: <code>/home/pi/printer_1_data/systemd</code></li> </ul> <p>When asked if Raspicam Fix should be applied select <code>No</code> by typing <code>N</code> then <code>Enter</code>.</p> <p>When asked to add Crowsnest Update Manager entry to moonraker.conf select <code>No</code> by typing <code>N</code> then <code>Enter</code>.</p> <p>Then enter this command to install:</p> <pre><code>sudo make install\n</code></pre> <p>When asked to reboot NOW select <code>Yes</code> by typing <code>y</code> then <code>Enter</code>.</p>"},{"location":"configuration/crowsnest/#updating-crowsnest","title":"Updating Crowsnest","text":"<p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open the <code>moonraker.conf</code> file and add the following lines:</p> <pre><code>[update_manager crowsnest]\ntype: git_repo\npath: ~/crowsnest\norigin: https://github.com/mainsail-crew/crowsnest.git\nmanaged_services: crowsnest\ninstall_script: tools/install.sh\n</code></pre> <p>Once done, click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>You can now click the refresh button (still in the Machine tab) on the Update Manager tile.</p> <p>You will see a new crowsnest line appear.</p> <p>You can now configure your webcam (resolution, fps, focus etc...) by clicking on the <code>EDIT CROWSNEST.CONF</code> link in the <code>WEBCAMS</code> tab of Mainsail settings.</p> <p></p>"},{"location":"configuration/crowsnest/#uninstalling-crowsnest","title":"Uninstalling Crowsnest","text":"<p>If needed you can uninstall Crowsnest by entering the following commands (one at a time):</p> <pre><code>cd ~/crowsnest\nmake uninstall\nsudo rm -rf /home/pi/crowsnest\n</code></pre>"},{"location":"configuration/crowsnest/#add-camera-support-on-the-speeder-pad-screen","title":"Add camera support on the Speeder Pad screen","text":"<p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open the <code>KlipperScreen.conf</code> file and and uncomment the line:</p> <pre><code>camera_url: http://127.0.0.1/webcam/?action=stream\n</code></pre> <p>Click on SAVE &amp; RESTART at the top right to save the file.</p> <p>A new <code>Camera</code> icon will appear in the <code>Actions</code> menu.</p>"},{"location":"configuration/crowsnest/#install-and-update-timelapse","title":"Install and Update Timelapse","text":"<p>In the SSH command prompt window, enter the following commands (one at a time):</p> <p>In case you use 1 instance</p> <pre><code>cd ~/\ngit clone https://github.com/mainsail-crew/moonraker-timelapse.git\nln -sf \"/home/pi/moonraker-timelapse/component/timelapse.py\" \"/home/pi/moonraker/moonraker/components/timelapse.py\"\nln -sf \"/home/pi/moonraker-timelapse/klipper_macro/timelapse.cfg\" \"/home/pi/printer_data/config/timelapse.cfg\"\nsudo apt install ffmpeg\nsudo reboot\n</code></pre> <p>In case you use 3 instances:</p> <pre><code>cd ~/\ngit clone https://github.com/mainsail-crew/moonraker-timelapse.git\nln -sf \"/home/pi/moonraker-timelapse/component/timelapse.py\" \"/home/pi/moonraker/moonraker/components/timelapse.py\"\nln -sf \"/home/pi/moonraker-timelapse/klipper_macro/timelapse.cfg\" \"/home/pi/printer_1_data/config/timelapse.cfg\"\nln -sf \"/home/pi/moonraker-timelapse/klipper_macro/timelapse.cfg\" \"/home/pi/printer_2_data/config/timelapse.cfg\"\nln -sf \"/home/pi/moonraker-timelapse/klipper_macro/timelapse.cfg\" \"/home/pi/printer_3_data/config/timelapse.cfg\"\nsudo apt install ffmpeg\nsudo reboot\n</code></pre> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open the <code>moonraker.conf</code> file and add the following lines:</p> <pre><code>[timelapse]\n\n[update_manager timelapse]\ntype: git_repo\nprimary_branch: main\npath: ~/moonraker-timelapse\norigin: https://github.com/mainsail-crew/moonraker-timelapse.git\nmanaged_services: klipper moonraker\n</code></pre> <p>Once done, click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>You can now click the refresh button (still in the Machine tab) on the <code>Update Manager</code> tile.</p> <p>You will see a new <code>timelapse</code> line appear.</p> <p></p> <p>You now need to make changes to your Slicer, continue at Slicer Changes.</p>"},{"location":"configuration/delete-old/","title":"Delete Flsun Builds","text":"<p>To upgrade to official builds, follow these instructions:</p> <p>In the SSH command prompt window, enter the following command:</p> <pre><code>sudo rm /home/pi/.gitconfig\n</code></pre>"},{"location":"configuration/delete-old/#install-kiauh","title":"Install Kiauh","text":"<p>Then enter the following command to install Kiauh:</p> <pre><code>git clone https://github.com/th33xitus/kiauh.git\n</code></pre>"},{"location":"configuration/delete-old/#run-kiauh","title":"Run Kiauh","text":"<p>Launch Kiauh by entering this command:</p> <pre><code>./kiauh/kiauh.sh\n</code></pre> <p>This window should appear:</p> <p></p>"},{"location":"configuration/delete-old/#remove-existing-configs","title":"Remove Existing Configs","text":"<p>Enter in <code>3) [Remove]</code> menu by typing <code>3</code> then <code>Enter</code>:</p> <p></p> <ul> <li> <p>Remove <code>7) [MJPG-Streamer]</code> by typing <code>7</code> then <code>Enter</code> (you will need to enter the Root password).</p> </li> <li> <p>Remove <code>5) [KlipperScreen]</code> by typing <code>5</code> then <code>Enter</code>.</p> </li> <li> <p>Remove <code>3) [Mainsail]</code> by typing <code>3</code> then <code>Enter</code>.</p> </li> <li> <p>Remove <code>2) [Moonraker]</code> by typing <code>2</code> then <code>Enter</code>.</p> </li> <li> <p>When it's done, remove <code>1) [Klipper]</code> by typing <code>1</code> then <code>Enter</code>.</p> </li> <li> <p>When it's done, go back to main menu by typing <code>B</code> then <code>Enter</code>.</p> </li> <li> <p>Exit Kiauh by typing <code>Q</code> then <code>Enter</code>.</p> </li> <li> <p>Enter the following commands (one at a time):</p> </li> </ul> <pre><code>sudo rm -rf /home/pi/.moonraker_database_1 &amp;&amp; rm -rf /home/pi/.moonraker_database_2 &amp;&amp; rm -rf /home/pi/.moonraker_database_3\nsudo rm -rf /home/pi/klipper_config\nsudo rm -rf /home/pi/klipper_logs\nsudo rm -rf /home/pi/moonraker-timelapse\nsudo rm /home/pi/savedVariables1.cfg &amp;&amp; rm /home/pi/savedVariables2.cfg &amp;&amp; rm /home/pi/savedVariables3.cfg\n</code></pre> <p>To continue on, you must now decide how many printers you will connect to the Speeder Pad, if you only need one printer continue on at Single Instance, if you need multiple, then continue at Multiple Instances</p>"},{"location":"configuration/neopixels/","title":"Use Neopixels Ring Light","text":""},{"location":"configuration/neopixels/#macros","title":"Macros","text":"<ul> <li>Turn On Neopixels with <code>NEOPIXEL_ON</code> macro</li> <li>Turn Off Neopixels with <code>NEOPIXEL_OFF</code> macro</li> <li>Turn On Neopixels in blue with <code>NEOPIXEL_BLUE</code> macro</li> <li>Turn On Neopixels in red with <code>NEOPIXEL_RED</code> macro</li> <li>Turn On Neopixels in green with <code>NEOPIXEL_GREEN</code> macro</li> <li>Turn On Neopixels in yellow with <code>NEOPIXEL_YELLOW</code> macro</li> <li>Turn On Neopixels in orange with <code>NEOPIXEL_ORANGE</code> macro</li> <li>Turn On Neopixels in violet with <code>NEOPIXEL_VIOLET</code> macro</li> <li>Turn on Neopixels based on nozzle temperature (All LEDs) with <code>HOTEND_GLOW</code> macro</li> <li>Turn on Neopixels based on nozzle temperature (LED by LED) with <code>HOTEND_PROGRESS</code> macro</li> <li>Turn on Neopixels based on bed temperature (All LEDs) with <code>BED_GLOW</code> macro</li> <li>Turn on Neopixels based on bed temperature (LED by LED) with <code>BED_PROGRESS</code> macro</li> <li>Turn on Neopixels based on printing progress (All LEDs) with <code>PERCENT_GLOW</code> macro</li> <li>Turn on Neopixels based on printing progress (LED by LED) with <code>PERCENT_PROGRESS</code> macro</li> <li>Turn on Neopixels based on printing speed (All LEDs) with <code>SPEED_GLOW</code> macro</li> <li>Turn on Neopixels based on printing speed (LED by LED) with <code>SPEED_PROGRESS</code> macro</li> </ul>"},{"location":"configuration/neopixels/#requirements","title":"Requirements","text":"<ul> <li> <p>Neon Flexible Tube 1m T1616-Side 10mm PCB: Here</p> </li> <li> <p>LED Strip WS2812 1 m 60 IP 30: Here</p> </li> <li> <p>Cable Ties 2.5mm</p> </li> <li> <p>Support (STL) : Here</p> </li> </ul>"},{"location":"configuration/neopixels/#wiring","title":"Wiring","text":""},{"location":"configuration/neopixels/#v400-mks-robin-nano-v20","title":"v400 (MKS Robin Nano V2.0)","text":""},{"location":"configuration/neopixels/#super-racer-mks-robin-nano-v30v31","title":"Super Racer (MKS Robin Nano V3.0/V3.1)","text":""},{"location":"configuration/neopixels/#super-racer-bigtreetech-skr-13","title":"Super Racer (BigTreeTech SKR 1.3)","text":""},{"location":"configuration/neopixels/#configuration","title":"Configuration","text":"<p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open the <code>printer.cfg</code> file and modify the following line by removing the <code>#</code> at the very beginning:</p> <pre><code>[include neopixels.cfg]  #Enable if you want to use Neopixels\n</code></pre> <p>Now open the <code>KlipperScreen.conf</code> file and copy all of this code just before line <code>#~# --- Do not edit below this line. This section is auto generated --- #~#</code>:</p> <pre><code>[menu __main actions neopixels]\nname: {{ gettext('Neopixels') }}\nicon: neopixels\n\n[menu __main actions neopixels led_off]\nname: {{ gettext('Off') }}\nicon: neopixels-off\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_OFF\"}\n\n[menu __main actions neopixels led_on]\nname: {{ gettext('On') }}\nicon: neopixels-on\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_ON\"}\n\n[menu __main actions neopixels led_blue]\nname: {{ gettext('Blue') }}\nicon: neopixels-blue\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_BLUE\"}\n\n[menu __main actions neopixels led_red]\nname: {{ gettext('Red') }}\nicon: neopixels-red\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_RED\"}\n\n[menu __main actions neopixels led_green]\nname: {{ gettext('Green') }}\nicon: neopixels-green\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_GREEN\"}\n\n[menu __main actions neopixels led_yellow]\nname: {{ gettext('Yellow') }}\nicon: neopixels-yellow\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_YELLOW\"}\n\n[menu __main actions neopixels led_orange]\nname: {{ gettext('Orange') }}\nicon: neopixels-orange\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_ORANGE\"}\n\n[menu __main actions neopixels led_violet]\nname: {{ gettext('Violet') }}\nicon: neopixels-violet\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_VIOLET\"}\n\n[menu __main actions neopixels hotend_glow]\nname: {{ gettext('Hotend (All)') }}\nicon: extruder\nmethod: printer.gcode.script\nparams: {\"script\":\"HOTEND_GLOW\"}\n\n[menu __main actions neopixels hotend_progress]\nname: {{ gettext('Hotend (One by One)') }}\nicon: extruder\nmethod: printer.gcode.script\nparams: {\"script\":\"HOTEND_PROGRESS\"}\n\n[menu __main actions neopixels bed_glow]\nname: {{ gettext('Bed (All)') }}\nicon: bed\nmethod: printer.gcode.script\nparams: {\"script\":\"BED_GLOW\"}\n\n[menu __main actions neopixels bed_progress]\nname: {{ gettext('Bed (One by One)') }}\nicon: bed\nmethod: printer.gcode.script\nparams: {\"script\":\"BED_PROGRESS\"}\n\n[menu __main actions neopixels percent_glow]\nname: {{ gettext('Progress (All)') }}\nicon: clock\nmethod: printer.gcode.script\nparams: {\"script\":\"PERCENT_GLOW\"}\n\n[menu __main actions neopixels percent_progress]\nname: {{ gettext('Progress (One by One)') }}\nicon: clock\nmethod: printer.gcode.script\nparams: {\"script\":\"PERCENT_PROGRESS\"}\n\n[menu __main actions neopixels speed_glow]\nname: {{ gettext('Speed (All)') }}\nicon: speed+\nmethod: printer.gcode.script\nparams: {\"script\":\"SPEED_GLOW\"}\n\n[menu __main actions neopixels speed_progress]\nname: {{ gettext('Speed (One by One)') }}\nicon: speed+\nmethod: printer.gcode.script\nparams: {\"script\":\"SPEED_PROGRESS\"}\n\n[menu __print neopixels]\nname: {{ gettext('Neopixels') }}\nicon: neopixels\n\n[menu __print neopixels led_off]\nname: {{ gettext('Off') }}\nicon: neopixels-off\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_OFF\"}\n\n[menu __print neopixels led_on]\nname: {{ gettext('On') }}\nicon: neopixels-on\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_ON\"}\n\n[menu __print neopixels led_blue]\nname: {{ gettext('Blue') }}\nicon: neopixels-blue\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_BLUE\"}\n\n[menu __print neopixels led_red]\nname: {{ gettext('Red') }}\nicon: neopixels-red\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_RED\"}\n\n[menu __print neopixels led_green]\nname: {{ gettext('Green') }}\nicon: neopixels-green\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_GREEN\"}\n\n[menu __print neopixels led_yellow]\nname: {{ gettext('Yellow') }}\nicon: neopixels-yellow\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_YELLOW\"}\n\n[menu __print neopixels led_orange]\nname: {{ gettext('Orange') }}\nicon: neopixels-orange\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_ORANGE\"}\n\n[menu __print neopixels led_violet]\nname: {{ gettext('Violet') }}\nicon: neopixels-violet\nmethod: printer.gcode.script\nparams: {\"script\":\"NEOPIXEL_VIOLET\"}\n\n[menu __print neopixels hotend_glow]\nname: {{ gettext('Hotend (All)') }}\nicon: extruder\nmethod: printer.gcode.script\nparams: {\"script\":\"HOTEND_GLOW\"}\n\n[menu __print neopixels hotend_progress]\nname: {{ gettext('Hotend (One by One)') }}\nicon: extruder\nmethod: printer.gcode.script\nparams: {\"script\":\"HOTEND_PROGRESS\"}\n\n[menu __print neopixels bed_glow]\nname: {{ gettext('Bed (All)') }}\nicon: bed\nmethod: printer.gcode.script\nparams: {\"script\":\"BED_GLOW\"}\n\n[menu __print neopixels bed_progress]\nname: {{ gettext('Bed (One by One)') }}\nicon: bed\nmethod: printer.gcode.script\nparams: {\"script\":\"BED_PROGRESS\"}\n\n[menu __print neopixels percent_glow]\nname: {{ gettext('Progress (All)') }}\nicon: clock\nmethod: printer.gcode.script\nparams: {\"script\":\"PERCENT_GLOW\"}\n\n[menu __print neopixels percent_progress]\nname: {{ gettext('Progress (One by One)') }}\nicon: clock\nmethod: printer.gcode.script\nparams: {\"script\":\"PERCENT_PROGRESS\"}\n\n[menu __print neopixels speed_glow]\nname: {{ gettext('Speed (All)') }}\nicon: speed+\nmethod: printer.gcode.script\nparams: {\"script\":\"SPEED_GLOW\"}\n\n[menu __print neopixels speed_progress]\nname: {{ gettext('Speed (One by One)') }}\nicon: speed+\nmethod: printer.gcode.script\nparams: {\"script\":\"SPEED_PROGRESS\"}\n</code></pre> <p>Once done, click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p>"},{"location":"configuration/update-klipperscreen/","title":"Update KlipperScreen","text":"<p>Go to your Mainsail Web interface then select the <code>Machine</code> tab.</p> <p>Open the <code>moonraker.conf</code> file and add the following lines:</p> <pre><code>[update_manager KlipperScreen]\ntype: git_repo\npath: /home/pi/KlipperScreen\norigin: https://github.com/Guilouz/KlipperScreen-Flsun-Speeder-Pad.git\nenv: /home/pi/.KlipperScreen-env/bin/python\nrequirements: scripts/KlipperScreen-requirements.txt\ninstall_script: scripts/KlipperScreen-install.sh\n</code></pre> <p>Once done, click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>You can now click the refresh button (still in the Machine tab) on the <code>Update Manager</code> tile.</p> <p>You will see a new KlipperScreen update appear, if you see a \u26a0\ufe0fDIRTY update, just select <code>Hard Recovery</code> to update.</p> <p></p> <p>Once installed you will have the new version of KlipperScreen and future updates will point directly to my repo like this:</p> <p></p> <p>More info are available here: KlipperScreen-Flsun-Speeder-Pad.</p> <p>Next is to install Crowsnest.</p>"},{"location":"configuration/usb-serial/","title":"Get USB Serial from Motherboard","text":"<p>Connect your printer to one of the Pad's USB ports.</p> <p>Connect in SSH then enter the following command to retrieve the motherboard USB serial:</p> <pre><code>ls /dev/serial/by-id/*\n</code></pre> <p>You should see the USB serial appear like this (serial is different depending on the motherboard):</p> <p></p> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open <code>printer.cfg</code> file and find <code>[mcu]</code> section.</p> <p>Edit the following existing line with serial you have just obtained like this:</p> <pre><code>serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0\n</code></pre> <p>Click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>Your printer should connect to your PAD.</p> <p>You now need to make changes to KlipperScreen, continue at Update KlipperScreen.</p>"},{"location":"configuration/adxl345/","title":"ADXL345","text":"<p>Currently we have documentation for the following devices...</p> <ul> <li>Raspberry Pi Pico</li> <li>Fysetc Portable Input Shaper</li> </ul>"},{"location":"configuration/adxl345/fysetc/","title":"Use ADXL345 with Fysetc Portable Input Shaper","text":"<p>You can use Fysetc Portable Input Shaper with FLSUN Speeder Pad for measuring Resonances via USB.</p>"},{"location":"configuration/adxl345/fysetc/#requirements","title":"Requirements","text":"<ul> <li>Fysetc Portable Input Shaper accelerometer available: Here </li> <li>USB-A/Male to USB-C/Male Cable</li> </ul> <p>Note: You can cut the yellow edges to reduce the width</p> <p></p>"},{"location":"configuration/adxl345/fysetc/#dependencies","title":"Dependencies","text":"<p>Some dependencies are required to use this accelerometer, install them with this following commands (one at a time):</p> <pre><code>sudo apt update\nsudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n</code></pre> <p>Followed by this command to install Numpy in Klipper's environment:</p> <pre><code>~/klippy-env/bin/pip install -v numpy\n</code></pre>"},{"location":"configuration/adxl345/fysetc/#compile","title":"Compile","text":"<p>It's also necessary to compile firmware for Fysetc Portable Input Shaper, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre>"},{"location":"configuration/adxl345/fysetc/#flash","title":"Flash","text":"<p>Plug Portable Input Shaper into one of the Speeder Pad's USB ports while holding down the button.</p> <p>Type this commands to flash firmware (one at a time):</p> <pre><code>cd ~\nsudo mount /dev/sda1 /mnt\nsudo cp /home/pi/klipper/out/klipper.uf2 /mnt/\nsudo umount /mnt\n</code></pre>"},{"location":"configuration/adxl345/fysetc/#config","title":"Config","text":"<p>And now, type this command to retrieve the serial:</p> <pre><code>ls /dev/serial/by-id/*\n</code></pre> <p>You should see 2 serials appear, that of the Fysetc Portable Input Shaper is the one with the mention <code>Klipper_rp2040</code>:</p> <p></p> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open <code>adxl345_fysetc.cfg</code> file and edit following line with serial you have just obtained:</p> <pre><code>serial: /dev/serial/by-id/usb-Klipper_rp2040_E6605481DB318D34-if00\n</code></pre> <p>Click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>Then uncomment (remove the #) to the following line in the <code>printer.cfg</code> file to enable ADXL support:</p> <pre><code>[include adxl345_fysetc.cfg]\n</code></pre> <p>Click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>You should see the <code>PIS MCU</code> connecting to Klipper.</p>"},{"location":"configuration/adxl345/fysetc/#test","title":"Test","text":"<p>You can test accelerometer by entering this command:</p> <pre><code>ACCELEROMETER_QUERY\n</code></pre> <p>Something like this must be returned:</p> <pre><code>accelerometer values (x, y, z): 5551.544565, 7048.078582, -1924.535449\n</code></pre>"},{"location":"configuration/adxl345/fysetc/#run","title":"Run","text":"<p>Enter this command to measure the noise of the accelerometer for each axis:</p> <pre><code>MEASURE_AXES_NOISE\n</code></pre> <p>You should get some baseline numbers for the noise of accelerometer on the axes (should be somewhere in the range of ~1-100). Too high axes noise (e.g. 1000 and more) can be indicative of the sensor issues, problems with its power, or too noisy imbalanced fans.</p> <p>To measure the resonances, see here: https://www.klipper3d.org/Measuring_Resonances.html</p> <p>Note: After tests, it's better to disable the ADXL by commenting out the <code>[include adxl345_fysetc.cfg]</code> line again.</p>"},{"location":"configuration/adxl345/raspberry-pi-pico/","title":"Use ADXL345 with Raspberry Pi Pico","text":"<p>You can use ADXL345 with FLSUN Speeder Pad for measuring Resonances via USB with a Raspberry Pi Pico.</p>"},{"location":"configuration/adxl345/raspberry-pi-pico/#requirements","title":"Requirements","text":"<ul> <li>Raspberry Pi Pico</li> <li>ADXL345 Accelerometer</li> <li>USB-A/Male to Micro-USB/Male Cable</li> <li>Cable, tin and soldering iron</li> </ul>"},{"location":"configuration/adxl345/raspberry-pi-pico/#wiring","title":"Wiring","text":""},{"location":"configuration/adxl345/raspberry-pi-pico/#dependencies","title":"Dependencies","text":"<p>Some dependencies are required to use ADXL345, install them with this following commands (one at a time):</p> <pre><code>sudo apt update\nsudo apt install python3-numpy python3-matplotlib libatlas-base-dev\n</code></pre> <p>Followed by this command to install Numpy in Klipper's environment:</p> <pre><code>~/klippy-env/bin/pip install -v numpy\n</code></pre>"},{"location":"configuration/adxl345/raspberry-pi-pico/#compile","title":"Compile","text":"<p>It's also necessary to compile firmware for Raspberry Pico, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre>"},{"location":"configuration/adxl345/raspberry-pi-pico/#flash","title":"Flash","text":"<p>Plug Raspberry Pi Pico into one of the Speeder Pad's USB ports while holding down the <code>BOOTSEL</code> button.</p> <p>Type this commands to flash firmware (one at a time):</p> <pre><code>cd ~\nsudo mount /dev/sda1 /mnt\nsudo cp /home/pi/klipper/out/klipper.uf2 /mnt/\nsudo umount /mnt\n</code></pre>"},{"location":"configuration/adxl345/raspberry-pi-pico/#config","title":"Config","text":"<p>And now, type this command to retrieve the serial:</p> <pre><code>ls /dev/serial/by-id/*\n</code></pre> <p>You should see 2 serials appear, that of the Raspberry Pi Pico is the one with the mention <code>Klipper_rp2040</code>:</p> <p></p> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Open <code>adxl345_pico.cfg</code> file and edit following line with serial you have just obtained:</p> <pre><code>serial: /dev/serial/by-id/usb-Klipper_rp2040_E6605481DB318D34-if00\n</code></pre> <p>Click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>Then uncomment (remove the #) to the following line in the <code>printer.cfg</code> file to enable ADXL support:</p> <pre><code>[include adxl345_pico.cfg]\n</code></pre> <p>Click on <code>SAVE &amp; RESTART</code> at the top right to save the file.</p> <p>You should see the <code>ADXL MCU</code> connecting to Klipper.</p>"},{"location":"configuration/adxl345/raspberry-pi-pico/#test","title":"Test","text":"<p>You can test accelerometer by entering this command:</p> <pre><code>ACCELEROMETER_QUERY\n</code></pre> <p>Something like this must be returned:</p> <pre><code>accelerometer values (x, y, z): 5551.544565, 7048.078582, -1924.535449\n</code></pre>"},{"location":"configuration/adxl345/raspberry-pi-pico/#run","title":"Run","text":"<p>Enter this command to measure the noise of the accelerometer for each axis:</p> <pre><code>MEASURE_AXES_NOISE\n</code></pre> <p>You should get some baseline numbers for the noise of accelerometer on the axes (should be somewhere in the range of ~1-100). Too high axes noise (e.g. 1000 and more) can be indicative of the sensor issues, problems with its power, or too noisy imbalanced fans.</p> <p>To measure the resonances, see here: https://www.klipper3d.org/Measuring_Resonances.html</p> <p>Note: After tests, it's better to disable the ADXL by commenting out the <code>[include adxl345_pico.cfg]</code> line again.</p>"},{"location":"configuration/multiple-instances/configure/","title":"Configuration","text":""},{"location":"configuration/multiple-instances/configure/#download-configs","title":"Download Configs","text":"<p>Download and unzip my repository zip file here: https://github.com/Guilouz/Klipper-Flsun-Speeder-Pad/archive/refs/heads/main.zip</p> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Then upload <code>KlipperScreen.conf</code>, <code>printer.cfg</code>, <code>macros.cfg</code>, <code>neopixels.cfg</code>, <code>adxl345_pico.cfg</code> and <code>adxl345_fysetc.cfg</code> files located in <code>Configurations</code> directory according to your printer.</p> <p>Open the <code>KlipperScreen.conf</code> file and edit it to enable multiple instance by removing the <code>#</code> symbols like this:</p> <p></p> <p>Go to the Mainsail settings (gear at the top right of the interface) and select <code>PRINTERS</code> tab.</p> <p>Add as many printers as you have installed instances of Klipper/Moonraker by adding the IP address of your Pad and the port of each instance (The same IP addresses and ports obtained after installing Moonraker) like this:</p> <p></p> <p>You can now select <code>Printers</code> on left tab and switch to others printers.</p> <p>You need to upload <code>printer.cfg</code>, <code>macros.cfg</code>, <code>neopixels.cfg</code>, <code>adxl345_pico.cfg</code> and <code>adxl345_fysetc.cfg</code> files for each printer.</p> <p>Open <code>printer.cfg</code> file, find <code>[save_variables]</code> and <code>[virtual_sdcard]</code> sections and edit paths for each configured printer:</p>"},{"location":"configuration/multiple-instances/configure/#printer-1","title":"Printer #1","text":"<pre><code>[save_variables]\nfilename: ~/printer_1_data/config/variables.cfg\n\n[virtual_sdcard]\npath: ~/printer_1_data/gcodes\n</code></pre>"},{"location":"configuration/multiple-instances/configure/#printer-2","title":"Printer #2","text":"<pre><code>[save_variables]\nfilename: ~/printer_2_data/config/variables.cfg\n\n[virtual_sdcard]\npath: ~/printer_2_data/gcodes\n</code></pre>"},{"location":"configuration/multiple-instances/configure/#printer-3","title":"Printer #3","text":"<pre><code>[save_variables]\nfilename: ~/printer_3_data/config/variables.cfg\n\n[virtual_sdcard]\npath: ~/printer_3_data/gcodes\n</code></pre> <p>Note: Changes in the <code>KlipperScreen.conf</code> file only have an effect on the first configured printer, it's not needed on others.</p> <p>Restart Speeder Pad and printer to take effect.</p> <p>Note: You can select printer you want at startup on the screen. You can also enable <code>default_printer</code> setting in <code>KlipperScreen.conf</code> to start directly on printer you want and switch to others with shuffle button on the left side.</p> <p>You now need to configure the Speeder Pad to talk to your Motherboard, continue at USB Serial.</p>"},{"location":"configuration/multiple-instances/install/","title":"Multiple Instances - Install Official Builds","text":"<p>Relaunch Kiauh by entering this command:</p> <pre><code>./kiauh/kiauh.sh\n</code></pre> <p>Enter in <code>1) [Install]</code> menu by typing <code>1</code> then <code>Enter</code>:</p> <p></p> <p>Install <code>1) [Klipper]</code> by typing <code>1</code> then <code>Enter</code>.</p> <p>Select <code>1) [Python 3.x]  (recommended)</code> by typing <code>1</code> then <code>Enter</code>.</p> <p>Then enter the number of Klipper instances by typing <code>3</code> and <code>Enter</code> to confirm:</p> <p></p> <p>When asked to assign custom names, select NO by typing <code>N</code> then <code>Enter</code>:</p> <p></p> <p>When it's done, install <code>2) [Moonraker]</code> by typing <code>2</code> then <code>Enter</code> and confirm by typing <code>Y</code>.</p> <p>Then enter the number of Moonraker instances by typing <code>3</code> then <code>Enter</code> and confirm by typing <code>Y</code>:</p> <p></p> <p>When it's done, you get your 3 instances with their IP addresses and ports, write them down they will be useful later:</p> <p></p> <p>Install <code>3) [Mainsail]</code> by typing <code>3</code> then <code>Enter</code> and select no by typing <code>n</code> when asked to add the recommended macros.</p> <p>When it's done, go back to main menu by typing <code>B</code> then <code>Enter</code>.</p> <p>Exit Kiauh by typing <code>Q</code> then <code>Enter</code>.</p> <p>Enter the following commands (one at a time) to install KlipperScreen:</p> <pre><code>git clone https://github.com/Guilouz/KlipperScreen-Flsun-Speeder-Pad.git\nsudo mv /home/pi/KlipperScreen-Flsun-Speeder-Pad /home/pi/KlipperScreen\ncd ~/KlipperScreen\n./scripts/KlipperScreen-install.sh\n</code></pre> <p>Note: Installation may take several minutes.</p> <p>When it's done, enter this commands (one at a time):</p> <pre><code>cd ~\nln -s /home/pi/gcode_files/USB-Disk /home/pi/printer_1_data/gcodes/USB-Disk\nln -s /home/pi/gcode_files/USB-Disk /home/pi/printer_2_data/gcodes/USB-Disk\nln -s /home/pi/gcode_files/USB-Disk /home/pi/printer_3_data/gcodes/USB-Disk\nsudo reboot\n</code></pre> <p>Your Speeder Pad now running offical builds with 3 instances.</p> <p>Now you should flash your printers motherboard, see Firmware</p>"},{"location":"configuration/single-instance/configure/","title":"Configuration","text":"<p>Download and unzip my repository zip file here: https://github.com/Guilouz/Klipper-Flsun-Speeder-Pad/archive/refs/heads/main.zip</p> <p>Go to your Mainsail Web interface then click on <code>Machine</code> tab.</p> <p>Then upload <code>KlipperScreen.conf</code>, <code>printer.cfg</code>, <code>macros.cfg</code>, <code>neopixels.cfg</code> and <code>adxl345.cfg</code> files located in <code>Configurations</code> directory according to your printer.</p> <p>Restart Speeder Pad and printer to take effect.</p> <p>You now need to configure the Speeder Pad to talk to your Motherboard, continue at USB Serial.</p>"},{"location":"configuration/single-instance/install/","title":"Single Instance - Install Official Builds","text":"<p>Relaunch Kiauh by entering this command:</p> <pre><code>./kiauh/kiauh.sh\n</code></pre> <p>Enter in <code>1) [Install]</code> menu by typing <code>1</code> then <code>Enter</code>:</p> <p></p> <p>Install <code>1) [Klipper]</code> by typing <code>1</code> then <code>Enter</code>.</p> <p>Select <code>1) [Python 3.x]  (recommended)</code> by typing <code>1</code> then <code>Enter</code>.</p> <p>Then enter the number of Klipper instance by typing <code>1</code> and <code>Enter</code> to confirm:</p> <p></p> <p>When it's done, install <code>2) [Moonraker]</code> by typing <code>2</code> then <code>Enter</code> and confirm by typing <code>Y</code>.</p> <p>When it's done, install <code>3) [Mainsail]</code> by typing <code>3</code> then <code>Enter</code> and select no by typing <code>n</code> when asked to add the recommended macros.</p> <p>When it's done, go back to main menu by typing <code>B</code> then <code>Enter</code>.</p> <p>Exit Kiauh by typing <code>Q</code> then <code>Enter</code>.</p> <p>Enter the following commands (one at a time) to install KlipperScreen:</p> <pre><code>git clone https://github.com/Guilouz/KlipperScreen-Flsun-Speeder-Pad.git\nsudo mv /home/pi/KlipperScreen-Flsun-Speeder-Pad /home/pi/KlipperScreen\ncd ~/KlipperScreen\n./scripts/KlipperScreen-install.sh\n</code></pre> <p>Note: Installation may take several minutes.</p> <p>When it's done, enter this commands (one at a time):</p> <pre><code>cd ~\nln -s /home/pi/gcode_files/USB-Disk /home/pi/printer_data/gcodes/USB-Disk\nsudo reboot\n</code></pre> <p>Your Speeder Pad now running offical builds with 1 instance.</p> <p>Now you should flash your printers motherboard, see Firmware</p>"},{"location":"configuration/slicer-changes/firmware-retraction/","title":"Firmware Retraction","text":"<p>Firmware retraction gives an advantage compared to Slicer retraction, it can be modified during a print (from Mainsail or KlipperScreen) and therefore the same gcode can be printed with different parameters without the need to be re-sliced.</p>"},{"location":"configuration/slicer-changes/firmware-retraction/#cura","title":"Cura","text":"<p>Install <code>Klipper Settings Plugin</code> (available here: Klipper Settings Plugin) and enable <code>Enable Firmware Retraction</code> setting like that:</p> <p></p>"},{"location":"configuration/slicer-changes/firmware-retraction/#prusasclicer-superslicer","title":"PrusaSclicer / SuperSlicer","text":"<p>You just need to enable <code>Use firmware retraction</code> setting like that:</p> <p></p> <p>Next move onto Calibration.</p>"},{"location":"configuration/slicer-changes/start-end/","title":"Slicer Side Changes","text":"<p>Change your Start and End Gcode in your Slicer settings like this:</p>"},{"location":"configuration/slicer-changes/start-end/#cura","title":"Cura","text":""},{"location":"configuration/slicer-changes/start-end/#start-gcode","title":"Start GCode","text":"<pre><code>;Nozzle diameter = {machine_nozzle_size}\n;Filament type = {material_type}\n;Filament name = {material_brand} {material_name}\n;Filament weight = {filament_weight}\n;M109 S{material_print_temperature}\n;M190 S{material_bed_temperature}\n\nSTART_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}\n</code></pre>"},{"location":"configuration/slicer-changes/start-end/#end-gcode","title":"End GCode","text":"<pre><code>END_PRINT\n</code></pre>"},{"location":"configuration/slicer-changes/start-end/#prusaslicer-superslicer","title":"PrusaSlicer / SuperSlicer","text":""},{"location":"configuration/slicer-changes/start-end/#start-gcode_1","title":"Start GCode","text":"<pre><code>START_PRINT BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature]\nM104 S[first_layer_temperature]\nM190 S[first_layer_bed_temperature]\n</code></pre>"},{"location":"configuration/slicer-changes/start-end/#end-gcode_1","title":"End GCode","text":"<pre><code>END_PRINT\n</code></pre>"},{"location":"configuration/slicer-changes/start-end/#lycheeslicer","title":"LycheeSlicer","text":""},{"location":"configuration/slicer-changes/start-end/#start-gcode_2","title":"Start GCode","text":"<pre><code>START_PRINT BED_TEMP={bed_temp} EXTRUDER_TEMP={temp}\n</code></pre>"},{"location":"configuration/slicer-changes/start-end/#end-gcode_2","title":"End GCode","text":"<pre><code>END_PRINT\n</code></pre> <p>Next move onto Firmware Retraction.</p>"},{"location":"firmware/","title":"Firmware","text":"<p>You now need to flash your printers motherboard with the version of Klipper you just installed.</p> <p>However you must pick the appropriate instructions based on your machine and board.</p>"},{"location":"firmware/#v400","title":"v400","text":"<ul> <li>MKS Robin Nano v2.0 / Nano v2.1 Clone</li> <li>BigTreeTech SKR 3.0</li> </ul> <p>The Default board is the MKS.</p>"},{"location":"firmware/#super-racer","title":"Super Racer","text":"<ul> <li>MKS Robin Nano v3.x</li> <li>BigTreeTech SKR 1.3</li> </ul>"},{"location":"firmware/super-racer/bigtreetech-skr-1-3/","title":"Update Super Racer Motherboard Firmware (BigTreeTech SKR 1.3)","text":"<p>It's important that your motherboard firmware version matches with the installed Klipper version.</p> <p>Version is visible on <code>System Loads</code> tile -&gt; <code>mcu</code> section (in <code>Machine</code> tab).</p> <p>To update firmware, follow these instructions:</p> <p>In the SSH command prompt window, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre> <p>Super Racer motherboard doesn't support DFU mode, so it's not possible to install the firmware directly. It's therefore necessary to install it manually.</p> <p>Get the firmware named <code>klipper.bin</code> in <code>/home/pi/klipper/out/</code> directory (on the left part of MobaXterm).</p> <p>Rename it to <code>firmware.bin</code> and copy it to the root of an microSD card formatted in FAT32 and an allocation size of 4096.</p> <p>Insert the microSD card into the motherboard then turn on the printer.</p> <p>Installation only takes a few seconds, to verify that the firmware has been successfully installed, the file on the microSD card must have been renamed to <code>FIRMWARE.BIN.CUR</code>.</p> <p>Once this is complete, you should continue at either Single Instance Configuration or Multiple Instance Configuration.</p>"},{"location":"firmware/super-racer/mks-robin-nano-3-x/","title":"Update Super Racer Motherboard Firmware (MKS Robin Nano V3.0/V3.1)","text":"<p>It's important that your motherboard firmware version matches with the installed Klipper version.</p> <p>Version is visible on <code>System Loads</code> tile -&gt; <code>mcu</code> section (in <code>Machine</code> tab).</p> <p>To update firmware, follow these instructions:</p> <p>In the SSH command prompt window, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre> <p>Super Racer motherboard doesn't support DFU mode, so it's not possible to install the firmware directly. It's therefore necessary to install it manually.</p> <p>Get the firmware named <code>klipper.bin</code> in <code>/home/pi/klipper/out/</code> directory (on the left part of MobaXterm).</p> <p>Rename it to <code>Robin_nano_v3.bin</code> and copy it to the root of an microSD card formatted in FAT32 and an allocation size of 4096.</p> <p>Insert the microSD card into the motherboard then turn on the printer.</p> <p>Installation only takes a few seconds, to verify that the firmware has been successfully installed, the file on the microSD card must have been renamed to <code>ROBIN_NANO_V3.BIN.CUR</code>.</p> <p>Once this is complete, you should continue at either Single Instance Configuration or Multiple Instance Configuration.</p>"},{"location":"firmware/v400/bigtreetech-skr-3-0/","title":"Update V400 Motherboard Firmware (BigTreeTech SKR 3.0)","text":"<p>Note: Wiring for BigTreeTech SKR 3.0 is available here </p> <p>It's important that your motherboard firmware version matches with the installed Klipper version.</p> <p>Version is visible on <code>System Loads</code> tile -&gt; <code>mcu</code> section (in <code>Machine</code> tab).</p> <p>To update firmware, follow these instructions:</p> <p>In the SSH command prompt window, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre> <p>Get the firmware named <code>klipper.bin</code> in <code>/home/pi/klipper/out/</code> directory (on the left part of MobaXterm).</p> <p>Rename it to <code>firmware.bin</code> and copy it to the root of an microSD card formatted in FAT32 and an allocation size of 4096.</p> <p>Insert the microSD card into the motherboard then turn on the printer.</p> <p>Installation only takes a few seconds, to verify that the firmware has been successfully installed, the file on the microSD card must have been renamed to <code>FIRMWARE.BIN.CUR</code>.</p> <p>Note: For future Klipper firmware updates, it's possible to directly flash the firmware via SSH.</p> <p>USB serial is needed for this, you can retrieve it by following this step: Get USB Serial from Motherboard</p> <p>In the SSH command prompt window, enter the following command:</p> <pre><code>make flash FLASH_DEVICE=/dev/serial/by-id/XXXXX (replacing the XXXXX with the serial obtained previously)\n</code></pre> <p>It should look like this:</p> <pre><code>make flash FLASH_DEVICE=/dev/serial/by-id/usb-Klipper_stm32h743xx_39004C001251303232383230-if00\n</code></pre> <p>There will be a <code>dfu-util: Error during download get_status</code> error message after the update. Don't pay attention to it, the most important thing is to get the green line <code>File downloaded successfully</code>.</p> <p>Once this is complete, you should continue at either Single Instance Configuration or Multiple Instance Configuration.</p>"},{"location":"firmware/v400/mks-robin-nano-2-0/","title":"Update V400 Motherboard Firmware (MKS Robin Nano V2.0 / Nano V2.1 Clone)","text":"<p>It is important that your motherboard firmware version matches with the installed Klipper version.</p> <p>Version is visible on <code>System Loads</code> tile -&gt; <code>mcu</code> section (in <code>Machine</code> tab).</p> <p>To update firmware, follow these instructions:</p> <p>In the SSH command prompt window, enter the following commands (one at a time):</p> <pre><code>cd ~/klipper/\nmake menuconfig\n</code></pre> <p>Select these settings:</p> <p></p> <p>Then on your keyboard press the <code>Q</code> key then <code>Y</code> to save configuration.</p> <p>Enter the following commands to compile firmware (one at a time):</p> <pre><code>make clean\nmake\n</code></pre> <p>Then this one to convert firmware:</p> <pre><code>./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano35.bin\n</code></pre> <p>The v400 motherboard doesn't support DFU mode, so it's not possible to install the firmware directly. It's therefore necessary to install it manually.</p> <p>Get the firmware named <code>Robin_nano35.bin</code> in <code>/home/pi/klipper/out/</code> directory (on the left part of MobaXterm).</p> <p>Copy it to the root of an microSD card formatted in FAT32 and an allocation size of 4096.</p> <p>Insert the microSD card into the motherboard then turn on the printer.</p> <p>Installation only takes a few seconds, to verify that the firmware has been successfully installed, the file on the microSD card must have been renamed to <code>ROBIN_NANO35.BIN.CUR</code>.</p> <p>Once this is complete, you should continue at either Single Instance Configuration or Multiple Instance Configuration.</p>"},{"location":"misc/changelog/","title":"Change Log","text":""},{"location":"misc/changelog/#30122022","title":"30/12/2022","text":"<ul> <li>Fixed bad character in <code>printer.cfg</code> files for Super Racer</li> </ul>"},{"location":"misc/changelog/#24122022","title":"24/12/2022","text":"<ul> <li>Updated <code>macros.cfg</code> file ([gcode_macro START_PRINT])</li> </ul>"},{"location":"misc/changelog/#16122022","title":"16/12/2022","text":"<ul> <li>Fixed Start Gcode for PrusaSlicer / SuperSlicer (Thanks to Julien Geffray)</li> <li>Changed Hotend preheat to 150C\u00b0 instead of 100C\u00b0 in START_PRINT macro</li> </ul>"},{"location":"misc/changelog/#13122022","title":"13/12/2022","text":"<ul> <li>Fixed delete <code>.gitconfig</code> file before installing Kiauh in Delete Flsun Builds section</li> </ul>"},{"location":"misc/changelog/#12122022","title":"12/12/2022","text":"<ul> <li>Updated <code>macros.cfg</code> file ([gcode_macro START_PRINT]) for latest Klipper changes with gcode_arcs</li> <li>Added how to add camera support on Speeder Pad screen in Improve Webcams Support section</li> <li>Updated <code>KlipperScreen.conf</code> file to support camera url</li> </ul>"},{"location":"misc/changelog/#11122022","title":"11/12/2022","text":"<ul> <li>Changes in Install Official Builds (1 instance) &amp; Install Official Builds (3 instances) sections to install Klipper with Python 3.x as recommended</li> <li>Added new section to Update V400 Motherboard Firmware (BigTreeTech SKR 3.0)</li> <li>Added new BigTreeTech SKR 3.0 config files for V400</li> </ul>"},{"location":"misc/stl-files/","title":"STL Files","text":"<p>Many usefull STL for FLSUN Super Racer and V400 can be found on my profiles:</p> <ul> <li>Printables</li> <li>Thingiverse</li> <li>ADXL345 Mount</li> <li>Fysetc Portable Input Shaper Mount</li> </ul>"},{"location":"misc/thanks/","title":"Special Thanks","text":"<ul> <li>FLSUN for sending me a free V400 and Speeder Pad.</li> <li>digitalninja-ro for Klipper NeoPixel Templates.</li> <li>NERO 3D for his tips about Input Shaper with a Raspberry Pi Pico.</li> <li>ManuMod for his tips about symlink on USB-Disk folder.</li> <li>Desuuuu &amp; danorder for the basics of some macros.</li> <li>Jonny Lissoos for his Timelapse instruction PDF.</li> <li>Iago Diaz &amp; Mathieu Chantome for their tests.</li> </ul>"},{"location":"misc/useful-links/","title":"Useful Links","text":"<ul> <li> <p>Extruder Calibration</p> </li> <li> <p>Pressure Advance</p> </li> <li> <p>Resonance Compensation</p> </li> <li> <p>Measure Resonances with ADXL</p> </li> <li> <p>Exclude Objects Function</p> </li> <li> <p>Timelapse</p> <ul> <li>Instructions for timelapse (corrected)</li> </ul> </li> <li> <p>Displaying Thumbnails on Screen</p> </li> <li> <p>Speeder Pad Mainsail Theme</p> </li> </ul>"},{"location":"reinstall/change-timezone/","title":"Change Timezone","text":"<p>To change Timezone, follow these instructions:</p> <ul> <li>In the SSH command prompt window, enter the following command to check the current time zone:</li> </ul> <pre><code>timedatectl\n</code></pre> <ul> <li>You can change your timezone by entering this command:</li> </ul> <pre><code>sudo dpkg-reconfigure tzdata\n</code></pre> <ul> <li> <p>On the page that appears, select your geographic area from the list and press <code>Enter</code>.</p> </li> <li> <p>Then select your timezone in the new list and press <code>Enter</code>.</p> </li> <li> <p>You can then verify that the change has been taken into account by retyping this command:</p> </li> </ul> <pre><code>timedatectl\n</code></pre> <p>You should now continue at Change WiFi Location.</p>"},{"location":"reinstall/change-wifi-location/","title":"Change Wi-Fi Location","text":"<p>By default, there is no Wi-Fi location defined.</p> <p>In the SSH command prompt window, enter the following command to check the current Wi-Fi location:</p> <pre><code>iw reg get\n</code></pre> <p>You obtain this:</p> <pre><code>global\ncountry 00: DFS-UNSET\n        (755 - 928 @ 2), (N/A, 20), (N/A), NO-IR\n        (2402 - 2472 @ 40), (N/A, 20), (N/A)\n        (2457 - 2482 @ 20), (N/A, 20), (N/A), AUTO-BW, NO-IR\n        (2474 - 2494 @ 20), (N/A, 20), (N/A), NO-OFDM, NO-IR\n        (5170 - 5250 @ 80), (N/A, 20), (N/A), AUTO-BW, NO-IR\n        (5250 - 5330 @ 80), (N/A, 20), (0 ms), DFS, AUTO-BW, NO-IR\n        (5490 - 5730 @ 160), (N/A, 20), (0 ms), DFS, NO-IR\n        (5735 - 5835 @ 80), (N/A, 20), (N/A), NO-IR\n        (57240 - 63720 @ 2160), (N/A, 0), (N/A)\n</code></pre> <p>All available locations can be displayed with this command:</p> <pre><code>sudo cat /usr/share/zoneinfo/zone.tab\n</code></pre> <p>To change the location enter the following command replacing <code>FR</code> by your country (you will need to enter the Root password):</p> <pre><code>sudo iw reg set FR\n</code></pre> <p>You can verify that the change has been made by entering this command again:</p> <pre><code>iw reg get\n</code></pre> <p>You obtain this (related to your country):</p> <pre><code>global\ncountry FR: DFS-ETSI\n        (2400 - 2483 @ 40), (N/A, 20), (N/A)\n        (5150 - 5250 @ 80), (N/A, 23), (N/A), NO-OUTDOOR, AUTO-BW\n        (5250 - 5350 @ 80), (N/A, 20), (0 ms), NO-OUTDOOR, DFS, AUTO-BW\n        (5470 - 5725 @ 160), (N/A, 26), (0 ms), DFS\n        (5725 - 5875 @ 80), (N/A, 13), (N/A)\n        (5945 - 6425 @ 160), (N/A, 23), (N/A), NO-OUTDOOR\n        (57000 - 71000 @ 2160), (N/A, 40), (N/A)\n</code></pre> <p>To make the location permanent, enter the following command replacing <code>FR</code> by your country (you will need to enter the Root password):</p> <pre><code>sudo sed -i 's/^REG.*=$/&amp;FR/' /etc/default/crda\n</code></pre> <p>Then, this command:</p> <pre><code>sudo sed -i '/^exit 0/ d' /etc/rc.local\n</code></pre> <p>And this command replacing <code>FR</code> by your country:</p> <pre><code>echo -e \"iw reg set FR\\nexit 0\" | sudo tee -a /etc/rc.local\n</code></pre> <p>Then reboot with this command:</p> <pre><code>sudo reboot\n</code></pre> <p>At this point the re-install is over, however it now needs Configuration.</p>"},{"location":"reinstall/configure-wifi/","title":"Configure WiFi","text":"<ul> <li>Go to <code>Menu</code> --&gt; <code>Network</code> and connect it to your WiFi network.</li> </ul> <p>The WiFi network you select must be running on 2.4ghz, if you try to connect to a 5ghz network it will not work correctly.</p> <p>You can now connect to your Speeder Pad over SSH, continue on at Connecting to SSH.</p>"},{"location":"reinstall/connecting-to-ssh/","title":"Connecting to SSH","text":""},{"location":"reinstall/connecting-to-ssh/#connecting","title":"Connecting","text":"<ul> <li> <p>Download and install MobaXterm. </p> </li> <li> <p>Launch it then click on the <code>Session</code> icon:</p> </li> </ul> <p></p> <ul> <li>Then on then <code>SSH</code> icon:</li> </ul> <p></p> <ul> <li>Enter the IP address of your Speeder Pad in the <code>Remote Host</code> field, check the <code>Specify username</code> box and enter the username <code>pi</code> in the field then click on <code>OK</code>:</li> </ul> <p></p> <ul> <li>On the new displayed window, enter the password <code>flsun</code> (it's not displayed when typing, this is normal):</li> </ul> <p></p> <ul> <li> <p>An authorization window will appear, authorize it. It's also possible that another window asking you to change the password will appear, ignore it.</p> </li> <li> <p>Once connected, on the left part of the window you have access to the folders and files of your Speeder Pad and on the right part to the SSH command prompt window:</p> </li> </ul> <p></p>"},{"location":"reinstall/connecting-to-ssh/#change-password","title":"Change Password","text":"<p>It's possible to change the password of the <code>pi</code> user:</p> <ul> <li>In the SSH command prompt window, enter the following command:</li> </ul> <pre><code>passwd\n</code></pre> <ul> <li> <p>You\u2019ll get asked to enter your current password for verification -&gt; <code>flsun</code>.</p> </li> <li> <p>After verification, you can type in your new password and press <code>Enter</code>.</p> </li> <li> <p>Note: You\u2019ll not be able to see any characters on the window while entering the password. So, don\u2019t panic, just type in your password and press <code>Enter</code>.</p> </li> <li> <p>Once you\u2019ve successfully verified your password, it\u2019ll get applied right away.</p> </li> </ul> <p>You can now Update Ubuntu.</p>"},{"location":"reinstall/flash-sd-card/","title":"Flash SD Card","text":"<ul> <li>Launch the Raspberry Pi Imager</li> </ul> <ul> <li> <p>Select <code>Speeder_Pad_V1.1_Restoration-221019.xz</code> image file as <code>Operating System</code> by selecting <code>Use custom</code>.</p> </li> <li> <p>Select your microSD card as <code>Storage</code>.</p> </li> <li> <p>Then click <code>Write</code>.</p> </li> <li> <p>After the image is written, turn off Speeder Pad if is on and remove all devices plugged into the USB ports.</p> </li> </ul> <p>Once this is done, move onto Flash Speeder Pad.</p>"},{"location":"reinstall/flash-speeder-pad/","title":"Flash Speeder Pad","text":"<p>Insert microSD card in Speeder Pad and turn on it and a loading bar should appear...</p> <p></p> <p>Wait until the bar is fully charged and green, this may take several minutes (roughly 10 to 15 minutes)</p> <p></p> <p>When it's done, turn off Speeder Pad and remove the microSD card. Turn Speeder Pad back on, it should start normally and arrive on KlipperScreen splashscreen.</p> <p>Once this is done, you can now Configure WiFi.</p>"},{"location":"reinstall/prerequisites/","title":"Prerequisites","text":"<p>By default, Root access is not allowed on Speeder Pad. To enable it, follow these instructions to restore OS image file:</p> <p>Note: A microSD card of at least 32 GB is required.</p>"},{"location":"reinstall/prerequisites/#software-required","title":"Software Required","text":"<ul> <li> <p>Download Restoration Image and unzip it.</p> </li> <li> <p>Download and install Raspberry Pi Imager.</p> </li> </ul> <p>Once you have these ready, move onto Flash SD Card.</p>"},{"location":"reinstall/update-ubuntu/","title":"Update Ubuntu Dependencies","text":"<p>In the SSH command prompt window, enter the following command to download updates list (you will need to enter the Root password):</p> <pre><code>sudo apt update\n</code></pre> <p>Then this command to install all of them:</p> <pre><code>sudo apt full-upgrade\n</code></pre> <p>Then remove not needed dependencies (one command at a time):</p> <pre><code>sudo apt remove --purge tailscale\nsudo apt autoremove\nsudo rm /etc/apt/sources.list.d/tailscale.list\nsudo rm /usr/share/keyrings/tailscale-archive-keyring.gpg\nsudo rm -rf /var/cache/tailscale\nsudo apt autoclean\nsudo apt clean\n</code></pre> <p>And this command to reboot:</p> <pre><code>sudo reboot\n</code></pre> <p>You should now Change Timezone.</p>"}]}